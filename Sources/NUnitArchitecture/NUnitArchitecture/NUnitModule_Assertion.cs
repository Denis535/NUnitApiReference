// This is an independent project of an individual developer. Dear PVS-Studio, please check it.
// PVS-Studio Static Code Analyzer for C, C++, C#, and Java: http://www.viva64.com

namespace NUnitArchitecture {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using NUnit.Framework;
    using NUnit.Framework.Constraints;
    using NUnit.Framework.Constraints.Comparers;
    using NUnit.Framework.Internal;
    using ProjectArchitecture.Model;

    public class NUnitModule_Assertion : Module {

        public override string Name => "NUnit.Assertion";
        public override Namespace[] Namespaces => new INode[] {
            "NUnit.Assertions".AsNamespace(),
            "Assert".AsGroup(),
            (TypeItem) typeof( Assert                                                         ),
            (TypeItem) typeof( StringAssert                                                   ),
            (TypeItem) typeof( CollectionAssert                                               ),
            (TypeItem) typeof( DirectoryAssert                                                ),
            (TypeItem) typeof( FileAssert                                                     ),
            (TypeItem) typeof( Warn                                                           ),
            (TypeItem) typeof( Assume                                                         ),
            "ToBe".AsGroup(),
            (TypeItem) typeof( Is                                                             ),
            (TypeItem) typeof( Iz                                                             ),
            (TypeItem) typeof( Has                                                            ),
            (TypeItem) typeof( Does                                                           ),
            (TypeItem) typeof( Contains                                                       ),
            (TypeItem) typeof( Throws                                                         ),
            "Delegates".AsGroup(),
            (TypeItem) typeof( TestDelegate                                                   ),
            (TypeItem) typeof( AsyncTestDelegate                                              ),
            (TypeItem) typeof( ActualValueDelegate<>                                          ),
            "Exceptions".AsGroup(),
            (TypeItem) typeof( ResultStateException                                           ),
            (TypeItem) typeof( AssertionException                                             ),
            (TypeItem) typeof( MultipleAssertException                                        ),
            (TypeItem) typeof( InconclusiveException                                          ),
            (TypeItem) typeof( IgnoreException                                                ),
            (TypeItem) typeof( SuccessException                                               ),

            "NUnit.Constraints".AsNamespace(),
            "ConstraintBuilder".AsGroup(),
            (TypeItem) typeof( ConstraintBuilder                                              ),
            (TypeItem) typeof( ConstraintBuilder.ConstraintStack                              ),
            "ConstraintResolver".AsGroup(),
            (TypeItem) typeof( IResolveConstraint                                             ),
            (TypeItem) typeof( ReusableConstraint                                             ),
            "Constraint".AsGroup(),
            (TypeItem) typeof( IConstraint                                                    ),
            (TypeItem) typeof( Constraint                                                     ),
            (TypeItem) typeof( NullConstraint                                                 ),
            (TypeItem) typeof( FalseConstraint                                                ),
            (TypeItem) typeof( TrueConstraint                                                 ),
            (TypeItem) typeof( NaNConstraint                                                  ),
            (TypeItem) typeof( EqualConstraint                                                ),
            (TypeItem) typeof( SameAsConstraint                                               ),
            (TypeItem) typeof( RangeConstraint                                                ),
            (TypeItem) typeof( AnyOfConstraint                                                ),
            (TypeItem) typeof( ExactCountConstraint                                           ),
            (TypeItem) typeof( EmptyConstraint                                                ),
            (TypeItem) typeof( ContainsConstraint                                             ),
            (TypeItem) typeof( AttributeExistsConstraint                                      ),
            (TypeItem) typeof( PropertyExistsConstraint                                       ),
            (TypeItem) typeof( BinarySerializableConstraint                                   ),
            (TypeItem) typeof( XmlSerializableConstraint                                      ),
            (TypeItem) typeof( EmptyDirectoryConstraint                                       ),
            (TypeItem) typeof( FileOrDirectoryExistsConstraint                                ),
            (TypeItem) typeof( PredicateConstraint<>                                          ),
            (TypeItem) typeof( ThrowsExceptionConstraint                                      ),
            (TypeItem) typeof( ThrowsNothingConstraint                                        ),
            (TypeItem) typeof( ExceptionNotThrownConstraint                                   ),
            (TypeItem) typeof( Tolerance                                                      ),
            (TypeItem) typeof( Tolerance.Range                                                ),
            (TypeItem) typeof( ToleranceMode                                                  ),
            "Constraint/Prefix".AsGroup(),
            (TypeItem) typeof( PrefixConstraint                                               ),
            (TypeItem) typeof( NotConstraint                                                  ),
            (TypeItem) typeof( AttributeConstraint                                            ),
            (TypeItem) typeof( PropertyConstraint                                             ),
            (TypeItem) typeof( NoItemConstraint                                               ),
            (TypeItem) typeof( SomeItemsConstraint                                            ),
            (TypeItem) typeof( AllItemsConstraint                                             ),
            (TypeItem) typeof( ThrowsConstraint                                               ),
            (TypeItem) typeof( DelayedConstraint                                              ),
            (TypeItem) typeof( DelayedConstraint.WithRawDelayInterval                         ),
            (TypeItem) typeof( DelayedConstraint.WithDimensionedDelayInterval                 ),
            (TypeItem) typeof( DelayedConstraint.WithRawPollingInterval                       ),
            (TypeItem) typeof( Interval                                                       ),
            (TypeItem) typeof( Interval.IntervalUnit                                          ),
            "Constraint/Binary".AsGroup(),
            (TypeItem) typeof( BinaryConstraint                                               ),
            (TypeItem) typeof( AndConstraint                                                  ),
            (TypeItem) typeof( OrConstraint                                                   ),
            "Constraint/Comparison".AsGroup(),
            (TypeItem) typeof( ComparisonConstraint                                           ),
            (TypeItem) typeof( LessThanConstraint                                             ),
            (TypeItem) typeof( LessThanOrEqualConstraint                                      ),
            (TypeItem) typeof( GreaterThanConstraint                                          ),
            (TypeItem) typeof( GreaterThanOrEqualConstraint                                   ),
            "Constraint/Collection".AsGroup(),
            (TypeItem) typeof( CollectionConstraint                                           ),
            (TypeItem) typeof( EmptyCollectionConstraint                                      ),
            (TypeItem) typeof( CollectionOrderedConstraint                                    ),
            "Constraint/Collection/Items".AsGroup(),
            (TypeItem) typeof( CollectionItemsEqualConstraint                                 ),
            (TypeItem) typeof( CollectionEquivalentConstraint                                 ),
            (TypeItem) typeof( CollectionSubsetConstraint                                     ),
            (TypeItem) typeof( CollectionSupersetConstraint                                   ),
            (TypeItem) typeof( CollectionContainsConstraint                                   ),
            (TypeItem) typeof( DictionaryContainsKeyConstraint                                ),
            (TypeItem) typeof( DictionaryContainsValueConstraint                              ),
            (TypeItem) typeof( UniqueItemsConstraint                                          ),
            "Constraint/String".AsGroup(),
            (TypeItem) typeof( StringConstraint                                               ),
            (TypeItem) typeof( EmptyStringConstraint                                          ),
            (TypeItem) typeof( StartsWithConstraint                                           ),
            (TypeItem) typeof( EndsWithConstraint                                             ),
            (TypeItem) typeof( SubstringConstraint                                            ),
            (TypeItem) typeof( RegexConstraint                                                ),
            "Constraint/Path".AsGroup(),
            (TypeItem) typeof( PathConstraint                                                 ),
            (TypeItem) typeof( SamePathConstraint                                             ),
            (TypeItem) typeof( SubPathConstraint                                              ),
            (TypeItem) typeof( SamePathOrUnderConstraint                                      ),
            "Constraint/Type".AsGroup(),
            (TypeItem) typeof( TypeConstraint                                                 ),
            (TypeItem) typeof( ExactTypeConstraint                                            ),
            (TypeItem) typeof( ExceptionTypeConstraint                                        ),
            (TypeItem) typeof( AssignableFromConstraint                                       ),
            (TypeItem) typeof( AssignableToConstraint                                         ),
            (TypeItem) typeof( InstanceOfTypeConstraint                                       ),

            "ConstraintResult".AsGroup(),
            (TypeItem) typeof( ConstraintResult                                               ),
            (TypeItem) typeof( ExactCountConstraintResult                                     ),
            (TypeItem) typeof( ConstraintStatus                                               ),
            "ConstraintResult/Prefix".AsGroup(),
            (TypeItem) typeof( PropertyConstraintResult                                       ),
            "ConstraintResult/Comparison".AsGroup(),
            (TypeItem) typeof( EqualConstraintResult                                          ),
            "ConstraintResult/Collection".AsGroup(),
            (TypeItem) typeof( CollectionEquivalentConstraintResult                           ),
            "ConstraintResult/Collection/Item".AsGroup(),
            (TypeItem) typeof( EachItemConstraintResult                                       ),

            "ConstraintExpression".AsGroup(),
            (TypeItem) typeof( ConstraintExpression                                           ),
            (TypeItem) typeof( ItemsConstraintExpression                                      ),
            (TypeItem) typeof( ResolvableConstraintExpression                                 ),

            "ConstraintOperator".AsGroup(),
            (TypeItem) typeof( ConstraintOperator                                             ),
            "ConstraintOperator/Prefix".AsGroup(),
            (TypeItem) typeof( PrefixOperator                                                 ),
            (TypeItem) typeof( NotOperator                                                    ),
            (TypeItem) typeof( WithOperator                                                   ),
            "ConstraintOperator/Prefix/Collection".AsGroup(),
            (TypeItem) typeof( CollectionOperator                                             ),
            (TypeItem) typeof( NoneOperator                                                   ),
            (TypeItem) typeof( SomeOperator                                                   ),
            (TypeItem) typeof( AllOperator                                                    ),
            "ConstraintOperator/Binary".AsGroup(),
            (TypeItem) typeof( BinaryOperator                                                 ),
            (TypeItem) typeof( AndOperator                                                    ),
            (TypeItem) typeof( OrOperator                                                     ),
            "ConstraintOperator/SelfResolving".AsGroup(),
            (TypeItem) typeof( SelfResolvingOperator                                          ),
            (TypeItem) typeof( AttributeOperator                                              ),
            (TypeItem) typeof( PropOperator                                                   ),
            (TypeItem) typeof( ExactCountOperator                                             ),
            (TypeItem) typeof( ThrowsOperator                                                 ),

            "NUnit.Infrastructure".AsNamespace(),
            "Adapters".AsGroup(),
            (TypeItem) typeof( EqualityAdapter                                                ),
            (TypeItem) typeof( EqualityAdapter.PredicateEqualityAdapter<,>                    ),
            (TypeItem) typeof( ComparisonAdapter                                              ),
            "Comparers".AsGroup(),
            (TypeItem) typeof( NUnitEqualityComparer                                          ),
            (TypeItem) typeof( NUnitEqualityComparer.FailurePoint                             ),
            (TypeItem) typeof( NUnitComparer                                                  ),
            (TypeItem) typeof( IChainComparer                                                 ),
            (TypeItem) typeof( NumericsComparer                                               ),
            (TypeItem) typeof( CharsComparer                                                  ),
            (TypeItem) typeof( StringsComparer                                                ),
            (TypeItem) typeof( TupleComparerBase                                              ),
            (TypeItem) typeof( TupleComparer                                                  ),
            (TypeItem) typeof( ValueTupleComparer                                             ),
            (TypeItem) typeof( TimeSpanToleranceComparer                                      ),
            (TypeItem) typeof( DateTimeOffsetsComparer                                        ),
            (TypeItem) typeof( ArraysComparer                                                 ),
            (TypeItem) typeof( EnumerablesComparer                                            ),
            (TypeItem) typeof( DictionariesComparer                                           ),
            (TypeItem) typeof( DictionaryEntriesComparer                                      ),
            (TypeItem) typeof( KeyValuePairsComparer                                          ),
            (TypeItem) typeof( StreamsComparer                                                ),
            (TypeItem) typeof( EquatablesComparer                                             ),
            (TypeItem) typeof( DirectoriesComparer                                            ),
            "Utils".AsGroup(),
            (TypeItem) typeof( ConstraintUtils                                                ),
        }.ToHierarchy();


    }
}
